<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="share.king.dao.BalanceEntityMapper">
  <resultMap id="BaseResultMap" type="share.king.entity.BalanceEntity">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="balance" jdbcType="INTEGER" property="balance" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="opt_date" jdbcType="TIMESTAMP" property="optDate" />
    <result column="balance_type_id" jdbcType="INTEGER" property="balanceTypeId" />
    <result column="state" jdbcType="INTEGER" property="state" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, balance, create_date, opt_date, balance_type_id, state
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from balance
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from balance
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="share.king.entity.BalanceEntity">
    insert into balance (id, user_id, balance, 
      create_date, opt_date, balance_type_id, 
      state)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{balance,jdbcType=INTEGER}, 
      #{createDate,jdbcType=TIMESTAMP}, #{optDate,jdbcType=TIMESTAMP}, #{balanceTypeId,jdbcType=INTEGER}, 
      #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="share.king.entity.BalanceEntity">
    insert into balance
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="optDate != null">
        opt_date,
      </if>
      <if test="balanceTypeId != null">
        balance_type_id,
      </if>
      <if test="state != null">
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="optDate != null">
        #{optDate,jdbcType=TIMESTAMP},
      </if>
      <if test="balanceTypeId != null">
        #{balanceTypeId,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="share.king.entity.BalanceEntity">
    update balance
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="balance != null">
        balance = #{balance,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="optDate != null">
        opt_date = #{optDate,jdbcType=TIMESTAMP},
      </if>
      <if test="balanceTypeId != null">
        balance_type_id = #{balanceTypeId,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="share.king.entity.BalanceEntity">
    update balance
    set user_id = #{userId,jdbcType=INTEGER},
      balance = #{balance,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      opt_date = #{optDate,jdbcType=TIMESTAMP},
      balance_type_id = #{balanceTypeId,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>