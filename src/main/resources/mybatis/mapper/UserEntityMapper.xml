<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="share.king.dao.UserEntityMapper">
    <resultMap id="BaseResultMap" type="share.king.entity.UserEntity">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="opt_date" jdbcType="TIMESTAMP" property="optDate"/>
        <result column="expire_date" jdbcType="TIMESTAMP" property="expireDate"/>
        <result column="valid_date" jdbcType="TIMESTAMP" property="validDate"/>
        <result column="state" jdbcType="INTEGER" property="state"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="zip" jdbcType="VARCHAR" property="zip"/>
        <result column="bill_id" jdbcType="VARCHAR" property="billId"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, user_name, password, create_date, opt_date, expire_date, valid_date, state, email, 
    address, zip, bill_id
  </sql>
    <select id="selectByExample" parameterType="share.king.entity.UserEntityExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'false' as QUERYID,
        <include refid="Base_Column_List"/>
        from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="share.king.entity.UserEntity">
    insert into user (id, user_name, password, 
      create_date, opt_date, expire_date, 
      valid_date, state, email, 
      address, zip, bill_id
      )
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{optDate,jdbcType=TIMESTAMP}, #{expireDate,jdbcType=TIMESTAMP}, 
      #{validDate,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{zip,jdbcType=VARCHAR}, #{billId,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="share.king.entity.UserEntity">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="optDate != null">
                opt_date,
            </if>
            <if test="expireDate != null">
                expire_date,
            </if>
            <if test="validDate != null">
                valid_date,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="zip != null">
                zip,
            </if>
            <if test="billId != null">
                bill_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="optDate != null">
                #{optDate,jdbcType=TIMESTAMP},
            </if>
            <if test="expireDate != null">
                #{expireDate,jdbcType=TIMESTAMP},
            </if>
            <if test="validDate != null">
                #{validDate,jdbcType=TIMESTAMP},
            </if>
            <if test="state != null">
                #{state,jdbcType=INTEGER},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="zip != null">
                #{zip,jdbcType=VARCHAR},
            </if>
            <if test="billId != null">
                #{billId,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="share.king.entity.UserEntity">
        update user
        <set>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="optDate != null">
                opt_date = #{optDate,jdbcType=TIMESTAMP},
            </if>
            <if test="expireDate != null">
                expire_date = #{expireDate,jdbcType=TIMESTAMP},
            </if>
            <if test="validDate != null">
                valid_date = #{validDate,jdbcType=TIMESTAMP},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=INTEGER},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="zip != null">
                zip = #{zip,jdbcType=VARCHAR},
            </if>
            <if test="billId != null">
                bill_id = #{billId,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="share.king.entity.UserEntity">
    update user
    set user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      opt_date = #{optDate,jdbcType=TIMESTAMP},
      expire_date = #{expireDate,jdbcType=TIMESTAMP},
      valid_date = #{validDate,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      zip = #{zip,jdbcType=VARCHAR},
      bill_id = #{billId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

</mapper>