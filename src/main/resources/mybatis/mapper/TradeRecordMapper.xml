<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="share.king.dao.TradeRecordMapper">
  <resultMap id="BaseResultMap" type="share.king.entity.TradeRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="alias" jdbcType="VARCHAR" property="alias" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="buy_time" jdbcType="TIMESTAMP" property="buyTime" />
    <result column="buy_price" jdbcType="INTEGER" property="buyPrice" />
    <result column="buy_count" jdbcType="INTEGER" property="buyCount" />
    <result column="sell_time" jdbcType="TIMESTAMP" property="sellTime" />
    <result column="sell_price" jdbcType="INTEGER" property="sellPrice" />
    <result column="open_price" jdbcType="INTEGER" property="openPrice" />
    <result column="close_price" jdbcType="INTEGER" property="closePrice" />
    <result column="high_price" jdbcType="INTEGER" property="highPrice" />
    <result column="low_price" jdbcType="INTEGER" property="lowPrice" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="state" jdbcType="INTEGER" property="state" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, alias, code, user_id, buy_time, buy_price, buy_count, sell_time, sell_price, 
    open_price, close_price, high_price, low_price, create_date, state
  </sql>
  <select id="selectByExample" parameterType="share.king.entity.TradeRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from trade_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from trade_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from trade_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="share.king.entity.TradeRecordExample">
    delete from trade_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="share.king.entity.TradeRecord">
    insert into trade_record (id, name, alias, 
      code, user_id, buy_time, 
      buy_price, buy_count, sell_time, 
      sell_price, open_price, close_price, 
      high_price, low_price, create_date, 
      state)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{alias,jdbcType=VARCHAR}, 
      #{code,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{buyTime,jdbcType=TIMESTAMP}, 
      #{buyPrice,jdbcType=INTEGER}, #{buyCount,jdbcType=INTEGER}, #{sellTime,jdbcType=TIMESTAMP}, 
      #{sellPrice,jdbcType=INTEGER}, #{openPrice,jdbcType=INTEGER}, #{closePrice,jdbcType=INTEGER}, 
      #{highPrice,jdbcType=INTEGER}, #{lowPrice,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, 
      #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="share.king.entity.TradeRecord">
    insert into trade_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="alias != null">
        alias,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="buyTime != null">
        buy_time,
      </if>
      <if test="buyPrice != null">
        buy_price,
      </if>
      <if test="buyCount != null">
        buy_count,
      </if>
      <if test="sellTime != null">
        sell_time,
      </if>
      <if test="sellPrice != null">
        sell_price,
      </if>
      <if test="openPrice != null">
        open_price,
      </if>
      <if test="closePrice != null">
        close_price,
      </if>
      <if test="highPrice != null">
        high_price,
      </if>
      <if test="lowPrice != null">
        low_price,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="state != null">
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="alias != null">
        #{alias,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="buyTime != null">
        #{buyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="buyPrice != null">
        #{buyPrice,jdbcType=INTEGER},
      </if>
      <if test="buyCount != null">
        #{buyCount,jdbcType=INTEGER},
      </if>
      <if test="sellTime != null">
        #{sellTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sellPrice != null">
        #{sellPrice,jdbcType=INTEGER},
      </if>
      <if test="openPrice != null">
        #{openPrice,jdbcType=INTEGER},
      </if>
      <if test="closePrice != null">
        #{closePrice,jdbcType=INTEGER},
      </if>
      <if test="highPrice != null">
        #{highPrice,jdbcType=INTEGER},
      </if>
      <if test="lowPrice != null">
        #{lowPrice,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="share.king.entity.TradeRecordExample" resultType="java.lang.Long">
    select count(*) from trade_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update trade_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.alias != null">
        alias = #{record.alias,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.buyTime != null">
        buy_time = #{record.buyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.buyPrice != null">
        buy_price = #{record.buyPrice,jdbcType=INTEGER},
      </if>
      <if test="record.buyCount != null">
        buy_count = #{record.buyCount,jdbcType=INTEGER},
      </if>
      <if test="record.sellTime != null">
        sell_time = #{record.sellTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sellPrice != null">
        sell_price = #{record.sellPrice,jdbcType=INTEGER},
      </if>
      <if test="record.openPrice != null">
        open_price = #{record.openPrice,jdbcType=INTEGER},
      </if>
      <if test="record.closePrice != null">
        close_price = #{record.closePrice,jdbcType=INTEGER},
      </if>
      <if test="record.highPrice != null">
        high_price = #{record.highPrice,jdbcType=INTEGER},
      </if>
      <if test="record.lowPrice != null">
        low_price = #{record.lowPrice,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update trade_record
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      alias = #{record.alias,jdbcType=VARCHAR},
      code = #{record.code,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      buy_time = #{record.buyTime,jdbcType=TIMESTAMP},
      buy_price = #{record.buyPrice,jdbcType=INTEGER},
      buy_count = #{record.buyCount,jdbcType=INTEGER},
      sell_time = #{record.sellTime,jdbcType=TIMESTAMP},
      sell_price = #{record.sellPrice,jdbcType=INTEGER},
      open_price = #{record.openPrice,jdbcType=INTEGER},
      close_price = #{record.closePrice,jdbcType=INTEGER},
      high_price = #{record.highPrice,jdbcType=INTEGER},
      low_price = #{record.lowPrice,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="share.king.entity.TradeRecord">
    update trade_record
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="alias != null">
        alias = #{alias,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="buyTime != null">
        buy_time = #{buyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="buyPrice != null">
        buy_price = #{buyPrice,jdbcType=INTEGER},
      </if>
      <if test="buyCount != null">
        buy_count = #{buyCount,jdbcType=INTEGER},
      </if>
      <if test="sellTime != null">
        sell_time = #{sellTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sellPrice != null">
        sell_price = #{sellPrice,jdbcType=INTEGER},
      </if>
      <if test="openPrice != null">
        open_price = #{openPrice,jdbcType=INTEGER},
      </if>
      <if test="closePrice != null">
        close_price = #{closePrice,jdbcType=INTEGER},
      </if>
      <if test="highPrice != null">
        high_price = #{highPrice,jdbcType=INTEGER},
      </if>
      <if test="lowPrice != null">
        low_price = #{lowPrice,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="share.king.entity.TradeRecord">
    update trade_record
    set name = #{name,jdbcType=VARCHAR},
      alias = #{alias,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      buy_time = #{buyTime,jdbcType=TIMESTAMP},
      buy_price = #{buyPrice,jdbcType=INTEGER},
      buy_count = #{buyCount,jdbcType=INTEGER},
      sell_time = #{sellTime,jdbcType=TIMESTAMP},
      sell_price = #{sellPrice,jdbcType=INTEGER},
      open_price = #{openPrice,jdbcType=INTEGER},
      close_price = #{closePrice,jdbcType=INTEGER},
      high_price = #{highPrice,jdbcType=INTEGER},
      low_price = #{lowPrice,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>