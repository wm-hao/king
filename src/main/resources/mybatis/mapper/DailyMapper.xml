<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="share.king.dao.DailyMapper">
  <resultMap id="BaseResultMap" type="share.king.entity.Daily">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="month" jdbcType="VARCHAR" property="month" />
    <result column="opt_date" jdbcType="TIMESTAMP" property="optDate" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="share.king.entity.Daily">
    <result column="idea" jdbcType="LONGVARCHAR" property="idea" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_date, month, opt_date, state, user_id
  </sql>
  <sql id="Blob_Column_List">
    idea
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="share.king.entity.DailyExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from daily
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="share.king.entity.DailyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from daily
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from daily
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from daily
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="share.king.entity.DailyExample">
    delete from daily
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="share.king.entity.Daily">
    insert into daily (id, create_date, month, 
      opt_date, state, user_id, 
      idea)
    values (#{id,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, #{month,jdbcType=VARCHAR}, 
      #{optDate,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{idea,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="share.king.entity.Daily">
    insert into daily
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="month != null">
        month,
      </if>
      <if test="optDate != null">
        opt_date,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="idea != null">
        idea,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="month != null">
        #{month,jdbcType=VARCHAR},
      </if>
      <if test="optDate != null">
        #{optDate,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="idea != null">
        #{idea,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="share.king.entity.DailyExample" resultType="java.lang.Long">
    select count(*) from daily
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update daily
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.month != null">
        month = #{record.month,jdbcType=VARCHAR},
      </if>
      <if test="record.optDate != null">
        opt_date = #{record.optDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.idea != null">
        idea = #{record.idea,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update daily
    set id = #{record.id,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      month = #{record.month,jdbcType=VARCHAR},
      opt_date = #{record.optDate,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      idea = #{record.idea,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update daily
    set id = #{record.id,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      month = #{record.month,jdbcType=VARCHAR},
      opt_date = #{record.optDate,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="share.king.entity.Daily">
    update daily
    <set>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="month != null">
        month = #{month,jdbcType=VARCHAR},
      </if>
      <if test="optDate != null">
        opt_date = #{optDate,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="idea != null">
        idea = #{idea,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="share.king.entity.Daily">
    update daily
    set create_date = #{createDate,jdbcType=TIMESTAMP},
      month = #{month,jdbcType=VARCHAR},
      opt_date = #{optDate,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      idea = #{idea,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="share.king.entity.Daily">
    update daily
    set create_date = #{createDate,jdbcType=TIMESTAMP},
      month = #{month,jdbcType=VARCHAR},
      opt_date = #{optDate,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>